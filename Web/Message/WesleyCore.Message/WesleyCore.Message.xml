<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WesleyCore.Message</name>
    </assembly>
    <members>
        <member name="T:WesleyCore.Message.Application.Commands.Message.CreateMessageCommandHandler">
            <summary>
            创建消息
            </summary>
        </member>
        <member name="M:WesleyCore.Message.Application.Commands.Message.CreateMessageCommandHandler.#ctor(WesleyCore.Message.Domain.Repository.IMessageRepository)">
            <summary>
            构造
            </summary>
            <param name="messageRepository"></param>
        </member>
        <member name="M:WesleyCore.Message.Application.Commands.Message.CreateMessageCommandHandler.Handle(WesleyCore.Message.Application.Commands.Message.CreateMessageCommand,System.Threading.CancellationToken)">
            <summary>
            新增消息
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Message.Application.Commands.Message.CreateMessageCommand">
            <summary>
            新增消息命令
            </summary>
        </member>
        <member name="M:WesleyCore.Message.Application.Commands.Message.CreateMessageCommand.#ctor(System.String,System.String,WesleyCore.Message.Domain.Enums.Message.MessageTypeEnum,System.Nullable{System.Guid},System.String,System.Collections.Generic.Dictionary{System.Guid,System.String})">
            <summary>
            构造
            </summary>
            <param name="title"></param>
            <param name="content"></param>
            <param name="type"></param>
            <param name="senderID"></param>
            <param name="senderName"></param>
            <param name="userList"></param>
        </member>
        <member name="P:WesleyCore.Message.Application.Commands.Message.CreateMessageCommand.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.Commands.Message.CreateMessageCommand.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.Commands.Message.CreateMessageCommand.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.Commands.Message.CreateMessageCommand.SenderID">
            <summary>
            发送人ID
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.Commands.Message.CreateMessageCommand.SenderName">
            <summary>
            发送人姓名
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.Commands.Message.CreateMessageCommand.UserList">
            <summary>
            接收人
            </summary>
        </member>
        <member name="T:WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent">
            <summary>
            创建消息集成订阅
            </summary>
        </member>
        <member name="M:WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent.#ctor(System.String,System.String,WesleyCore.Message.Domain.Enums.Message.MessageTypeEnum,System.Nullable{System.Guid},System.String,System.Collections.Generic.Dictionary{System.Guid,System.String})">
            <summary>
            构造
            </summary>
            <param name="title"></param>
            <param name="content"></param>
            <param name="type"></param>
            <param name="senderID"></param>
            <param name="senderName"></param>
            <param name="userList"></param>
        </member>
        <member name="P:WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent.SenderID">
            <summary>
            发送人ID
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent.SenderName">
            <summary>
            发送人姓名
            </summary>
        </member>
        <member name="P:WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent.UserList">
            <summary>
            接收人
            </summary>
        </member>
        <member name="T:WesleyCore.Message.Application.IntegrationEvents.Message.IMessageSubscriberService">
            <summary>
            接口
            </summary>
        </member>
        <member name="M:WesleyCore.Message.Application.IntegrationEvents.Message.IMessageSubscriberService.CreateMessage(WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent)">
            <summary>
            订阅创建消息
            </summary>
            <param name="event"></param>
        </member>
        <member name="T:WesleyCore.Message.Application.IntegrationEvents.Message.MessageSubscriberService">
            <summary>
            消息订阅方法
            </summary>
        </member>
        <member name="M:WesleyCore.Message.Application.IntegrationEvents.Message.MessageSubscriberService.#ctor(MediatR.IMediator)">
            <summary>
            构造
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:WesleyCore.Message.Application.IntegrationEvents.Message.MessageSubscriberService.CreateMessage(WesleyCore.Message.Application.IntegrationEvents.Message.CreateMessageIntegrationEvent)">
            <summary>
            创建订阅CreateMessage事件
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:WesleyCore.Message.Program">
             <summary>
            
             </summary>
        </member>
        <member name="M:WesleyCore.Message.Program.Main(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="M:WesleyCore.Message.Program.BuildDB">
            <summary>
            创建数据库
            </summary>
        </member>
        <member name="M:WesleyCore.Message.Program.CreateHostBuilder(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
             <returns></returns>
        </member>
        <member name="T:WesleyCore.Message.Startup">
             <summary>
            
             </summary>
        </member>
        <member name="M:WesleyCore.Message.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
             <summary>
            
             </summary>
             <param name="configuration"></param>
        </member>
        <member name="P:WesleyCore.Message.Startup.Configuration">
             <summary>
            
             </summary>
        </member>
        <member name="M:WesleyCore.Message.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
             <summary>
            
             </summary>
             <param name="services"></param>
        </member>
        <member name="M:WesleyCore.Message.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
             <summary>
            
             </summary>
             <param name="app"></param>
             <param name="env"></param>
        </member>
        <member name="T:WesleyCore.Controllers.WesleyCoreControllerBase">
            <summary>
            控制器基类
            </summary>
        </member>
        <member name="P:WesleyCore.Controllers.WesleyCoreControllerBase.Member">
            <summary>
            当前用户信息
            </summary>
        </member>
        <member name="M:WesleyCore.Controllers.WesleyCoreControllerBase.GetUser">
            <summary>
            当前用户信息方法
            </summary>
        </member>
        <member name="T:WesleyCore.Controllers.WesleyCoreAPIBaseController">
            <summary>
            Api
            </summary>
        </member>
        <member name="T:WesleyCore.Controllers.AuthModel">
            <summary>
            验证类
            </summary>
        </member>
        <member name="P:WesleyCore.Controllers.AuthModel.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:WesleyCore.Controllers.AuthModel.UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:WesleyCore.Controllers.AuthModel.IsAdmin">
            <summary>
            是否是管理员
            </summary>
        </member>
        <member name="P:WesleyCore.Controllers.AuthModel.PhoneNumber">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:WesleyCore.Controllers.AuthModel.TenantID">
            <summary>
            租户ID
            </summary>
        </member>
        <member name="T:WesleyCore.ServiceCollectionExtensions">
            <summary>
            中间件注册
            </summary>
        </member>
        <member name="M:WesleyCore.ServiceCollectionExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加swagger
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:WesleyCore.ServiceCollectionExtensions.AddMediatRServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            mediatR中间件注册
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:WesleyCore.ServiceCollectionExtensions.AddDomainContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})">
            <summary>
            新增数据库
            </summary>
            <param name="services"></param>
            <param name="optionsAction"></param>
            <returns></returns>
        </member>
        <member name="M:WesleyCore.ServiceCollectionExtensions.AddSqlServerDomainContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            新增数据库链接
            </summary>
            <param name="services"></param>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:WesleyCore.ServiceCollectionExtensions.AddRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            创建仓储
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:WesleyCore.ServiceCollectionExtensions.AddEventBus(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            新增订阅配置
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:WesleyCore.ServiceCollectionExtensions.AddAutoMap(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            增加AutoMap 配置
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Extensions.ErrorHandlingExtensions">
            <summary>
            扩展方法
            </summary>
        </member>
        <member name="M:WesleyCore.Extensions.ErrorHandlingExtensions.UseErrorHandling(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            error hangding
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Extensions.ErrorHandlingMiddleware">
            <summary>
            错误中间件
            </summary>
        </member>
        <member name="F:WesleyCore.Extensions.ErrorHandlingMiddleware.next">
            <summary>
            委托
            </summary>
        </member>
        <member name="M:WesleyCore.Extensions.ErrorHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            构造
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:WesleyCore.Extensions.ErrorHandlingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <returns></returns>
        </member>
        <member name="M:WesleyCore.Extensions.ErrorHandlingMiddleware.HandleExceptionAsync(Microsoft.AspNetCore.Http.HttpContext,System.Int32,System.String)">
            <summary>
            异常错误信息捕获，将错误信息用Json方式返回
            </summary>
            <param name="context"></param>
            <param name="statusCode"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Web.BizResult">
            <summary>
            返回数据实体
            </summary>
        </member>
        <member name="M:WesleyCore.Web.BizResult.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:WesleyCore.Web.BizResult.#ctor(System.String)">
            <summary>
            结果为成功,设置成功的消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:WesleyCore.Web.BizResult.#ctor(System.Boolean,System.String)">
            <summary>
            设置结果和提示消息
            </summary>
            <param name="isSuccess"></param>
            <param name="msg"></param>
        </member>
        <member name="P:WesleyCore.Web.BizResult.Success">
            <summary>
            接口调用是否成功
            </summary>
        </member>
        <member name="P:WesleyCore.Web.BizResult.Message">
            <summary>
            返回的错误信息
            </summary>
        </member>
        <member name="P:WesleyCore.Web.BizResult.ErrorData">
            <summary>
            不成功时的数据(如果需要)
            </summary>
        </member>
        <member name="P:WesleyCore.Web.BizResult.Data">
            <summary>
            成功时的数据
            </summary>
        </member>
        <member name="T:WesleyCore.Web.BizResult`1">
            <summary>
            输出格式
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:WesleyCore.Web.BizResult`1.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:WesleyCore.Web.BizResult`1.#ctor(`0)">
            <summary>
            构造
            </summary>
            <param name="_data"></param>
        </member>
        <member name="M:WesleyCore.Web.BizResult`1.#ctor(System.Boolean,`0,System.String)">
            <summary>
            构造
            </summary>
            <param name="isSuccess"></param>
            <param name="_data"></param>
            <param name="msg"></param>
        </member>
        <member name="P:WesleyCore.Web.BizResult`1.Data">
            <summary>
            返回的数据（泛型）
            </summary>
        </member>
        <member name="T:Wesley.Filter.ExceptionResultFilter">
             <summary>
            
             </summary>
        </member>
        <member name="M:Wesley.Filter.ExceptionResultFilter.#ctor(Microsoft.Extensions.Logging.ILogger{Wesley.Filter.ExceptionResultFilter})">
             <summary>
            
             </summary>
             <param name="Logger"></param>
        </member>
        <member name="M:Wesley.Filter.ExceptionResultFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
             <summary>
            
             </summary>
             <param name="context"></param>
        </member>
    </members>
</doc>
