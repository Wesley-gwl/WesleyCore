<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WesleyCore.Web</name>
    </assembly>
    <members>
        <member name="M:WesleyCore.Application.Commands.CreateOrderCommandHandler.Handle(WesleyCore.Application.Commands.CreateOrderCommand,System.Threading.CancellationToken)">
            <summary>
            接受
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Application.Commands.CreateOrderCommand">
            <summary>
            创建订单
            </summary>
        </member>
        <member name="P:WesleyCore.Application.Commands.CreateOrderCommand.UserId">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:WesleyCore.Application.Commands.CreateOrderCommand.UserName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:WesleyCore.Application.Commands.CreateOrderCommand.City">
            <summary>
            成是
            </summary>
        </member>
        <member name="P:WesleyCore.Application.Commands.CreateOrderCommand.ZipCode">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="T:WesleyCore.Application.Queries.System.User.Dto.LoginDto">
            <summary>
            登录
            </summary>
        </member>
        <member name="P:WesleyCore.Application.Queries.System.User.Dto.LoginDto.PhoneNumber">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:WesleyCore.Application.Queries.System.User.Dto.LoginDto.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:WesleyCore.Application.Queries.System.User.Dto.LoginDto.TenantId">
            <summary>
            租户id
            </summary>
        </member>
        <member name="P:WesleyCore.Application.Queries.System.User.Dto.LoginDto.IpAddress">
            <summary>
            ip地址
            </summary>
        </member>
        <member name="T:WesleyCore.Application.Queries.LoginHandler">
            <summary>
            登入
            </summary>
        </member>
        <member name="M:WesleyCore.Application.Queries.LoginHandler.Handle(WesleyCore.Application.Queries.System.User.Dto.LoginDto,System.Threading.CancellationToken)">
            <summary>
            登入
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Ordering.API.Application.DomainEventHandlers.OrderCreatedDomainEventHandler">
            <summary>
            订单创建领域事件
            </summary>
        </member>
        <member name="M:WesleyCore.Ordering.API.Application.DomainEventHandlers.OrderCreatedDomainEventHandler.Handle(WesleyCore.Domain.Events.OrderCreateDomainEvent,System.Threading.CancellationToken)">
            <summary>
            领域事件接受事件
            </summary>
            <param name="notification"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Ordering.API.Application.IntegrationEvents.IOrderSubscriberService">
             <summary>
            
             </summary>
        </member>
        <member name="M:WesleyCore.Ordering.API.Application.IntegrationEvents.IOrderSubscriberService.OrderCreated(WesleyCore.Ordering.API.Application.IntegrationEvents.OrderCreatedIntegrationEvent)">
            <summary>
            创建订单
            </summary>
            <param name="event"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Ordering.API.Application.IntegrationEvents.OrderSubscriberService">
            <summary>
            订阅服务-接受RM的集成事件请求
            </summary>
        </member>
        <member name="M:WesleyCore.Ordering.API.Application.IntegrationEvents.OrderSubscriberService.OrderCreated(WesleyCore.Ordering.API.Application.IntegrationEvents.OrderCreatedIntegrationEvent)">
            <summary>
            创建订阅OrderCreated事件
            </summary>
            <param name="event"></param>
        </member>
        <member name="T:WesleyCore.Ordering.API.Application.Queries.OrderQueryHandler">
            <summary>
            查询订单
            </summary>
        </member>
        <member name="M:WesleyCore.Ordering.API.Application.Queries.OrderQueryHandler.Handle(WesleyCore.Ordering.API.Application.Queries.OrderQuery,System.Threading.CancellationToken)">
            <summary>
            查询
            </summary>
            <param name="request"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Web.Authorizer.ApiHeaderToken">
            <summary>
            swigger token
            </summary>
        </member>
        <member name="M:WesleyCore.Web.Authorizer.ApiHeaderToken.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            在swagger接口文档参数中加入token
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:WesleyCore.Web.Authorizer.TokenPermission">
            <summary>
            验证token内api路由权限
            </summary>
        </member>
        <member name="M:WesleyCore.Web.Authorizer.TokenPermission.ValidatePermission(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            验证规则
            </summary>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Web.Controllers.AuthModel">
            <summary>
            验证类
            </summary>
        </member>
        <member name="P:WesleyCore.Web.Controllers.AuthModel.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:WesleyCore.Web.Controllers.AuthModel.UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:WesleyCore.Web.Controllers.AuthModel.IsAdmin">
            <summary>
            是否是管理员
            </summary>
        </member>
        <member name="P:WesleyCore.Web.Controllers.AuthModel.PhoneNumber">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:WesleyCore.Web.Controllers.AuthModel.TenantID">
            <summary>
            租户ID
            </summary>
        </member>
        <member name="T:WesleyCore.Web.Controllers.ApiControllers.HealthCheck">
            <summary>
            健康检查
            </summary>
        </member>
        <member name="M:WesleyCore.Web.Controllers.ApiControllers.HealthCheck.Check">
            <summary>
            创建订单
            </summary>
            <returns></returns>
        </member>
        <member name="M:WesleyCore.Web.Controllers.ApiControllers.HealthCheck.Check2">
            <summary>
            创建订单
            </summary>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Web.Controllers.ApiControllers.OrderController">
            <summary>
            订单
            </summary>
        </member>
        <member name="M:WesleyCore.Web.Controllers.ApiControllers.OrderController.#ctor(MediatR.IMediator)">
            <summary>
            构造
            </summary>
            <param name="mediator"></param>
        </member>
        <member name="M:WesleyCore.Web.Controllers.ApiControllers.OrderController.CreateOrder(WesleyCore.Application.Commands.CreateOrderCommand)">
            <summary>
            创建订单
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:WesleyCore.Web.Controllers.ApiControllers.OrderController.QueryOrder(WesleyCore.Ordering.API.Application.Queries.OrderQuery)">
            <summary>
            查询订单
            </summary>
            <param name="myOrderQuery"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyCore.Web.Controllers.WesleyCoreControllerBase">
            <summary>
            控制器基类
            </summary>
        </member>
        <member name="P:WesleyCore.Web.Controllers.WesleyCoreControllerBase.CurrentOperator">
            <summary>
            当前用户信息
            </summary>
        </member>
        <member name="T:WesleyCore.Web.Controllers.WesleyCoreAPIBaseController">
            <summary>
            Api
            </summary>
        </member>
        <member name="T:WesleyCore.Web.BizResult">
            <summary>
            返回数据实体
            </summary>
        </member>
        <member name="M:WesleyCore.Web.BizResult.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:WesleyCore.Web.BizResult.#ctor(System.String)">
            <summary>
            结果为成功,设置成功的消息
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:WesleyCore.Web.BizResult.#ctor(System.Boolean,System.String)">
            <summary>
            设置结果和提示消息
            </summary>
            <param name="isSuccess"></param>
            <param name="msg"></param>
        </member>
        <member name="P:WesleyCore.Web.BizResult.Success">
            <summary>
            接口调用是否成功
            </summary>
        </member>
        <member name="P:WesleyCore.Web.BizResult.Message">
            <summary>
            返回的错误信息
            </summary>
        </member>
        <member name="P:WesleyCore.Web.BizResult.ErrorData">
            <summary>
            不成功时的数据(如果需要)
            </summary>
        </member>
        <member name="P:WesleyCore.Web.BizResult.Data">
            <summary>
            成功时的数据
            </summary>
        </member>
        <member name="T:WesleyCore.Web.BizResult`1">
            <summary>
            输出格式
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:WesleyCore.Web.BizResult`1.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:WesleyCore.Web.BizResult`1.#ctor(`0)">
            <summary>
            构造
            </summary>
            <param name="_data"></param>
        </member>
        <member name="M:WesleyCore.Web.BizResult`1.#ctor(System.Boolean,`0,System.String)">
            <summary>
            构造
            </summary>
            <param name="isSuccess"></param>
            <param name="_data"></param>
            <param name="msg"></param>
        </member>
        <member name="P:WesleyCore.Web.BizResult`1.Data">
            <summary>
            返回的数据（泛型）
            </summary>
        </member>
        <member name="T:WesleyCore.Web.Startup.Swagger.ApiVersionExtAttribute">
            <summary>
            自定义Api版本特性，目前只用Swagger版本区分，若后期要把API访问实现多版本，则要引入Microsoft.AspNetCore.Mvc.Versioning
            </summary>
        </member>
        <member name="P:WesleyCore.Web.Startup.Swagger.ApiVersionExtAttribute.Version">
             <summary>
            
             </summary>
        </member>
        <member name="M:WesleyCore.Web.Startup.Swagger.ApiVersionExtAttribute.#ctor(System.String)">
            <summary>
            /
            </summary>
            <param name="version"></param>
        </member>
        <member name="T:WesleyCore.Program">
             <summary>
            
             </summary>
        </member>
        <member name="M:WesleyCore.Program.Main(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
        </member>
        <member name="M:WesleyCore.Program.CreateHostBuilder(System.String[])">
             <summary>
            
             </summary>
             <param name="args"></param>
             <returns></returns>
        </member>
        <member name="T:WesleyCore.Startup">
            <summary>
            启动项
            </summary>
        </member>
        <member name="F:WesleyCore.Startup.Configuration">
            <summary>
            配置项
            </summary>
        </member>
        <member name="M:WesleyCore.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:WesleyCore.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            配置服务
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:WesleyCore.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:GeekTime.Ordering.API.Extensions.ServiceCollectionExtensions">
            <summary>
            中间件注册
            </summary>
        </member>
        <member name="M:GeekTime.Ordering.API.Extensions.ServiceCollectionExtensions.AddMediatRServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            mediatR中间件注册
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:GeekTime.Ordering.API.Extensions.ServiceCollectionExtensions.AddDomainContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder})">
            <summary>
            新增数据库
            </summary>
            <param name="services"></param>
            <param name="optionsAction"></param>
            <returns></returns>
        </member>
        <member name="M:GeekTime.Ordering.API.Extensions.ServiceCollectionExtensions.AddSqlServerDomainContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String)">
            <summary>
            新增数据库链接
            </summary>
            <param name="services"></param>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="M:GeekTime.Ordering.API.Extensions.ServiceCollectionExtensions.AddRepositories(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            创建仓储
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:GeekTime.Ordering.API.Extensions.ServiceCollectionExtensions.AddEventBus(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            新增订阅配置
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Controllers.ViewControllers.HomeController">
            <summary>
            主页控制器
            </summary>
        </member>
        <member name="M:Web.Controllers.ViewControllers.HomeController.Login">
            <summary>
            登入
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Controllers.ViewControllers.HomeController.Index">
            <summary>
            首页
            </summary>
            <returns></returns>
        </member>
        <member name="T:WesleyPool.Web.Hubs.PushService">
            <summary>
            推送服务
            </summary>
        </member>
        <member name="M:WesleyPool.Web.Hubs.PushService.#ctor(Microsoft.AspNetCore.SignalR.IHubContext{WesleyPool.Web.Hubs.SystemHub})">
            <summary>
            constructor
            </summary>
            <param name="HubContext"></param>
        </member>
        <member name="M:WesleyPool.Web.Hubs.PushService.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            后台轮询
            </summary>
            <param name="stoppingToken"></param>
            <returns></returns>
        </member>
        <member name="T:WesleyPool.Web.Hubs.SystemHub">
            <summary>
            SignalR集成线
            </summary>
        </member>
        <member name="F:WesleyPool.Web.Hubs.SystemHub.Pool">
            <summary>
            线程池
            </summary>
        </member>
        <member name="M:WesleyPool.Web.Hubs.SystemHub.OnConnectedAsync">
            <summary>
            初始化连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:WesleyPool.Web.Hubs.SystemHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            断开
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
    </members>
</doc>
